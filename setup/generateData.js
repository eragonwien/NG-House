/**
 * 1. let the user choose which data are going to be generated 
 * 2. check if variables for test generation is available. if not, use time value
 * 3. ask the user to input how many data are going to be generated. user can abort from here.
 * 4. count the current number of data
 * 5. generate data base from the input
 * 6. count the number of generated data
 * 
 * Following test data can be generated:
 * address is generated from ADDRESS, POSTAL_CODE, CITY and LAND
 * 
 * user is generated from USER_NAME. email is firstname_lastname_time@laatname.com
 * for address, all address ids are queried and is randomly chosen.
 * role is always standard which has id of 1
 * 
 * house is generated by querying user , type, address and currency
 * a type is randomly chosen. base on type a specific ranges are generated
 * apartment: 20 - 100m, 1-2 bathrooms, 1-2 bedrooms
 * house: 100 - 500, 1-2 bathrooms, 1-4 bedrooms
 * villa : 500 - 1000, 1-5 bathrooms, 1-5 bedrooms
 * others: min 20 - max. 1000, 1-2 bathrooms, 1-2 bedrooms
 * price = (2000 - 5000) * size
 */
var readline = require('readline-sync');
var dotenv = require('dotenv');
var fs = require('fs');
var pool = require('../backend/config/db').pool;
var supportedTypes = ['house', 'user', 'address'];
start();
function start() {
    console.log('Supported Data: house, user, address');
    var type = readline.question('Which data is going to be generated ? ');
    if (!type in supportedTypes) {
        return console.log('Type is not supported.')
    }
    prepareGenerating(type);
}

function prepareGenerating(type) {
    var path = '.env';
    fs.exists(path, function (fileIsExist) {
        if (!fileIsExist) {
            return console.log('File .env not found. Abort.');
        }
        var count = readline.questionInt('How many data should be generated: ');
        if (count < 0) {
            console.log('The number cannot be smaller than zero. Please try again.')
            return prepareGenerating(type);
        }
        generateData(type, count);
    });
}

function generateData(type, count) {
    switch (type) {
        case 'house':
            generateHouse(count);
            break;
        case 'user':
            generateUser(count);
            break;
        case 'address':
            generateAddress(count);
            break;
        default: console.log('Unsupported Type.');
            break;
    }
}

function generateUser(count) {
    // create a random user
    var user = getUser();
    var model = require('../backend/components/user/userModel');
   
}

function getUser() {
    if (!process.env.USER_NAME) {
        var time = new Date().getTime();
        return {
            role_id: 1,
            firstname: 'first_'
        }
    }
}

function generateAddress(count) {
    var model = require('../backend/components/address/addressModel');

}

function generateHouse(count) {
   var model = require('../backend/components/house/houseModels');
    
}


